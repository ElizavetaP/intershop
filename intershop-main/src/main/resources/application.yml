server:
  port: 8080

image:
  folder: static/images

spring:
  application:
    name: intershop
  
  # Профиль по умолчанию для локальной разработки
  profiles:
    default: local
    
  # R2DBC конфигурация для H2
  r2dbc:
    url: r2dbc:h2:mem:///postdb
    username: sa
    password: qwerty
    pool:
      enabled: true
      initial-size: 10
      max-size: 20

  sql:
    init:
      mode: always
      schema-locations: classpath:schema.sql
      data-locations: classpath:data.sql

  # Redis конфигурация (как в уроке)
  data:
    redis:
      host: ${SPRING_DATA_REDIS_HOST:127.0.0.1}
      port: 6379
  cache:
    redis:
      time-to-live: PT3M

  # Thymeleaf автоконфигурация
  thymeleaf:
    encoding: UTF-8
    cache: false

  webflux:
    static-path-pattern: /static/**
  web:
    resources:
      static-locations: classpath:/static/
    
  # HTTP кодировка
  http:
    encoding:
      charset: UTF-8
      enabled: true
      force: true

  h2:
    console:
      enabled: true

  # OAuth2 конфигурация для взаимодействия с платежным сервисом  
  security:
    oauth2:
      client:
        provider:
          keycloak:
            token-uri: ${KEYCLOAK_URL:http://localhost:8080}/realms/intershop/protocol/openid-connect/token
            jwk-set-uri: ${KEYCLOAK_URL:http://localhost:8080}/realms/intershop/protocol/openid-connect/certs
            issuer-uri: ${KEYCLOAK_URL:http://localhost:8080}/realms/intershop
        registration:
          payment-service:
            provider: keycloak
            client-id: intershop-client
            client-secret: intershop-client-secret
            authorization-grant-type: client_credentials
            scope: payment:read,payment:write

# Настройки платежного сервиса
payment:
  service:
    url: ${PAYMENT_SERVICE_URL:http://localhost:8081}
    timeout: 5000

logging:
  level:
    # Базовые настройки для внешних библиотек
    org.springframework.r2dbc: DEBUG
    io.r2dbc.h2: DEBUG
    org.springframework.data.redis: DEBUG
    io.lettuce.core: INFO

---
# Локальная разработка
spring.config.activate.on-profile: local
logging.level.ru.practicum.intershop: DEBUG

---
# Docker окружение
spring.config.activate.on-profile: docker
logging.level.root: INFO
logging.level.ru.practicum.intershop: INFO